// Code generated by MockGen. DO NOT EDIT.
// Source: update_schedule.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockCheckForUpdatesSchedule is a mock of CheckForUpdatesSchedule interface
type MockCheckForUpdatesSchedule struct {
	ctrl     *gomock.Controller
	recorder *MockCheckForUpdatesScheduleMockRecorder
}

// MockCheckForUpdatesScheduleMockRecorder is the mock recorder for MockCheckForUpdatesSchedule
type MockCheckForUpdatesScheduleMockRecorder struct {
	mock *MockCheckForUpdatesSchedule
}

// NewMockCheckForUpdatesSchedule creates a new mock instance
func NewMockCheckForUpdatesSchedule(ctrl *gomock.Controller) *MockCheckForUpdatesSchedule {
	mock := &MockCheckForUpdatesSchedule{ctrl: ctrl}
	mock.recorder = &MockCheckForUpdatesScheduleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCheckForUpdatesSchedule) EXPECT() *MockCheckForUpdatesScheduleMockRecorder {
	return m.recorder
}

// ShouldCheckForUpdate mocks base method
func (m *MockCheckForUpdatesSchedule) ShouldCheckForUpdate(currentTime time.Time) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShouldCheckForUpdate", currentTime)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ShouldCheckForUpdate indicates an expected call of ShouldCheckForUpdate
func (mr *MockCheckForUpdatesScheduleMockRecorder) ShouldCheckForUpdate(currentTime interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShouldCheckForUpdate", reflect.TypeOf((*MockCheckForUpdatesSchedule)(nil).ShouldCheckForUpdate), currentTime)
}

// UpdatesChecked mocks base method
func (m *MockCheckForUpdatesSchedule) UpdatesChecked(timeUpdatesWhereChecked time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdatesChecked", timeUpdatesWhereChecked)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdatesChecked indicates an expected call of UpdatesChecked
func (mr *MockCheckForUpdatesScheduleMockRecorder) UpdatesChecked(timeUpdatesWhereChecked interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatesChecked", reflect.TypeOf((*MockCheckForUpdatesSchedule)(nil).UpdatesChecked), timeUpdatesWhereChecked)
}
