// Code generated by MockGen. DO NOT EDIT.
// Source: updatable_resolver.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUpdatableResolver is a mock of UpdatableResolver interface
type MockUpdatableResolver struct {
	ctrl     *gomock.Controller
	recorder *MockUpdatableResolverMockRecorder
}

// MockUpdatableResolverMockRecorder is the mock recorder for MockUpdatableResolver
type MockUpdatableResolverMockRecorder struct {
	mock *MockUpdatableResolver
}

// NewMockUpdatableResolver creates a new mock instance
func NewMockUpdatableResolver(ctrl *gomock.Controller) *MockUpdatableResolver {
	mock := &MockUpdatableResolver{ctrl: ctrl}
	mock.recorder = &MockUpdatableResolverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUpdatableResolver) EXPECT() *MockUpdatableResolverMockRecorder {
	return m.recorder
}

// Resolve mocks base method
func (m *MockUpdatableResolver) Resolve() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Resolve")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Resolve indicates an expected call of Resolve
func (mr *MockUpdatableResolverMockRecorder) Resolve() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Resolve", reflect.TypeOf((*MockUpdatableResolver)(nil).Resolve))
}
